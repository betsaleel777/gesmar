<?php

namespace App\Http\Controllers\Exploitation\Reception;

use App\Http\Controllers\Controller;
use App\Http\Resources\Personne\PersonneResource;
use App\Models\Exploitation\Personne;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class PersonnesController extends Controller
{
    public function all(): JsonResponse
    {
        $personnes = Personne::with(['site', 'type', 'identite', 'photocopie'])->get();
        return response()->json(['personnes' => PersonneResource::collection($personnes)]);
    }

    public function store(Request $request): JsonResponse
    {
        $request->validate(Personne::RULES);
        $personne = new Personne($request->all());
        $personne->codeGenerate();
        $personne->save();
        $personne->prospect();
        $message = "Personne nommé $request->nom a été enregistrée avec succès.";
        return response()->json(['message' => $message]);
    }

    public function show(int $id): PersonneResource
    {
        $personne = Personne::with(['site', 'type'])->withTrashed()->find($id);
        return PersonneResource::make($personne);
    }

    public function update(int $id, Request $request): JsonResponse
    {
        $request->validate(Personne::editRules($id, $request->situation_matrimoniale ?? ""));
        $personne = Personne::findOrFail($id);
        $personne->update($request->all());
        $personne->addMediaFromRequest('image_carte')->toMediaCollection(COLLECTION_MEDIA_PHOTOCOPIE);
        $personne->addMediaFromRequest('image_identite')->toMediaCollection(COLLECTION_MEDIA_IDENTITE);
        $message = "Personne $request->code a été modifié avec succès.";
        return response()->json(['message' => $message]);
    }

    public function trash(int $id): JsonResponse
    {
        $personne = Personne::findOrFail($id);
        $personne->delete();
        $message = "$personne->nom a été supprimé avec succès.";
        return response()->json(['message' => $message]);
    }

    public function restore(int $id): JsonResponse
    {
        $personne = Personne::withTrashed()->find($id);
        $personne->restore();
        $message = "$personne->nom a été restauré avec succès.";
        return response()->json(['message' => $message]);
    }

    public function getByMarche(int $id): JsonResponse
    {
        $personnes = Personne::with('site')->where('site_id', $id)->get();
        return response()->json(['personnes' => PersonneResource::collection($personnes)]);
    }
}
