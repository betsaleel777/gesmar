<?php

namespace App\Http\Controllers\Exploitation\Reception;

use App\Http\Controllers\Controller;
use App\Models\Exploitation\TypePersonne;
use Gate;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Request;

class TypePersonnesController extends Controller
{
    public function all(): JsonResponse
    {
        $response = Gate::inspect('viewAny', TypePersonne::class);
        $query = TypePersonne::with('site');
        $types = $response->allowed() ? $query->get() : $query->owner()->get();
        return response()->json(['types' => $types]);
    }

    public function store(Request $request): JsonResponse
    {
        $this->authorize('create', TypePersonne::class);
        $request->validate(TypePersonne::RULES);
        $type = new TypePersonne($request->all());
        $type->save();
        return response()->json(['message' => "Le type $request->nom a été enrgistré avec succès."]);
    }

    public function update(int $id, Request $request): JsonResponse
    {
        $type = TypePersonne::findOrFail($id);
        $this->authorize('update', $type);
        $request->validate(TypePersonne::RULES);
        $type->nom = $request->nom;
        $type->site_id = $request->site_id;
        $type->save();
        return response()->json(['message' => 'Le type a été modifié avec succès.']);
    }

    public function trash(int $id): JsonResponse
    {
        $type = TypePersonne::findOrFail($id);
        $this->authorize('delete', $type);
        $type->delete();
        return response()->json(['message' => "Le type: $type->nom a été supprimé avec succès."]);
    }

    public function restore(int $id): JsonResponse
    {
        $type = TypePersonne::withTrashed()->find($id);
        $this->authorize('restore', $type);
        $type->restore();
        return response()->json(['message' => "Le type $type->nom a été restauré avec succès."]);
    }

    public function trashed(): JsonResponse
    {
        $response = Gate::inspect('viewAny', TypePersonne::class);
        $query = TypePersonne::with('site')->onlyTrashed();
        $types = $response->allowed() ? $query->get() : $query->owner()->get();
        return response()->json(['types' => $types]);
    }

    public function show(int $id): JsonResponse
    {
        $type = TypePersonne::with('site')->withTrashed()->find($id);
        $this->authorize('update', $type);
        return response()->json(['type' => $type]);
    }
}
