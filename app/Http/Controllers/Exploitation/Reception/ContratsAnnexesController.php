<?php

namespace App\Http\Controllers\Exploitation\Reception;

use App\Http\Controllers\Controller;
use App\Interfaces\StandardControllerInterface;
use App\Models\Exploitation\ContratAnnexe;
use App\Models\Exploitation\Personne;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class ContratsAnnexesController extends Controller implements StandardControllerInterface
{
    public function all()
    {
        $contrats = ContratAnnexe::with('personne', 'site', 'annexe')->get();
        return response()->json(['contrats' => $contrats]);
    }

    public function store(Request $request)
    {
        $prospect = null;
        if ($request->mode == 0) {
            $rulesProspect = [
                'nom' => 'required|max:60',
                'prenom' => 'required|max:255',
                'adresse' => 'required|max:255',
                'contact' => 'required|max:20',
                'email' => 'nullable|email',
                'ville' => 'required|max:80',
            ];
            Validator::make($request->prospect, $rulesProspect)->validate();
            $prospect = new Personne($request->prospect);
            $prospect->codeGenerate();
            $prospect->site_id = $request->site_id;
            $prospect->save();
        } else {
            Validator::make($request->all(), ['personne_id' => 'required'])->validate();
        }
        foreach ($request->infos as $info) {
            $contrat = new ContratAnnexe($request->all());
            $contrat->proforma();
            $contrat->personne_id = $request->personne_id ?? $prospect->id;
            $contrat->codeGenerate();
            $contrat->debut = $info['debut'];
            $contrat->fin = $info['fin'];
            $contrat->usage = $info['usage'];
            $contrat->annexe_id = $info['annexe_id'];
            $contrat->save();
        }
        $message = "contrat(s) pour produit annexe enregistré(s) avec succès.";
        return response()->json(['message' => $message]);
    }

    public function update(int $id, Request $request)
    {
        $request->validate(ContratAnnexe::edit_rules($id));
        $contrat = ContratAnnexe::find($id);
        $contrat->update($request->all());
        $message = "Le contrat $contrat->code, pour produit annexe a été modifié avec succès.";
        return response()->json(['message' => $message]);
    }

    public function trashed()
    {
        $contrats = ContratAnnexe::with('personne', 'site', 'annexe')->onlyTrashed()->get();
        return response()->json(['contrats' => $contrats]);
    }

    public function show(int $id)
    {
        $contrat = ContratAnnexe::with('personne', 'site', 'annexe')->withTrashed()->find($id);
        return response()->json(['contrat' => $contrat]);
    }

    public function trash(int $id)
    {
        $contrat = ContratAnnexe::find($id);
        $contrat->delete();
        $message = "Le contrat pour produit annexe: $contrat->code a été supprimé avec succès.";
        return response()->json(['message' => $message]);
    }

    public function restore(int $id)
    {
        $contrat = ContratAnnexe::withTrashed()->find($id);
        $contrat->restore();
        $message = "Le contrat pour produit annexe: $contrat->code a été restauré avec succès.";
        return response()->json(['message' => $message]);
    }
}
