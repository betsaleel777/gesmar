<?php

namespace App\Http\Controllers\Exploitation\Reception;

use App\Http\Resources\Personne\PersonneListResource;
use App\Models\Exploitation\Personne;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Resources\Json\JsonResource;
use Illuminate\Support\Facades\Gate;

class ClientsController extends PersonnesController
{
    public function all(): JsonResponse
    {
        $response = Gate::inspect('viewAny', Personne::class);
        $query = Personne::with(['site', 'type'])->isClient();
        $clients = $response->allowed() ? $query->get() : $query->owner()->get();
        return response()->json(['clients' => PersonneListResource::collection($clients)]);
    }

    public function getPaginate(): JsonResource
    {
        $response = Gate::inspect('viewAny', Personne::class);
        $query = Personne::isClient();
        $clients = $response->allowed() ? $query->paginate(10) : $query->owner()->paginate(10);
        return PersonneListResource::collection($clients);
    }

    public function getSearch(string $search): JsonResource
    {
        $response = Gate::inspect('viewAny', Personne::class);
        $query = Personne::where('nom', 'LIKE', "%$search%")
            ->orWhere('contact', 'LIKE', "%$search%")->isClient();
        $clients = $response->allowed() ? $query->paginate(10) : $query->owner()->paginate(10);
        return PersonneListResource::collection($clients);
    }

    public function trashed(): JsonResponse
    {
        $response = Gate::inspect('viewAny', Personne::class);
        $query = Personne::with(['site', 'type'])->onlyTrashed();
        $clients = $response->allowed() ? $query->isClient()->get() : $query->isClient()->owner()->get();
        return response()->json(['clients' => PersonneListResource::collection($clients)]);
    }
}
