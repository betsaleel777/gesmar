<?php

namespace App\Http\Controllers\Exploitation\Reception;

use App\Http\Controllers\Controller;
use App\Interfaces\WithoutTrashControllerInterface;
use App\Models\Exploitation\Ordonnancement;
use App\Models\Exploitation\Paiement;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;

class OrdonnancementController extends Controller implements WithoutTrashControllerInterface
{
    public function all(): JsonResponse
    {
        $ordonnancements = Ordonnancement::with('personne', 'emplacement')->get();
        return response()->json(['ordonnancements' => $ordonnancements]);
    }

    public function store(Request $request): JsonResponse
    {
        $ordonnancement = new Ordonnancement($request->all());
        $ordonnancement->codeGenerate();
        $ordonnancement->save();
        $ordonnancement->impayer();
        foreach ($request->paiements as $payment) {
            $paiement = new Paiement();
            $paiement->ordonnancement_id = $ordonnancement->id;
            $paiement->facture_id = $payment['id'];
            $paiement->montant = $payment['montant'];
            $paiement->save();
        }
        $message = "L'ordonnancement $ordonnancement->code a été enregistré avec succès.";
        return response()->json(['message' => $message]);
    }

    public function update(int $id, Request $request): JsonResponse
    {
        $message = "Ordonnancement modifié avec succès.";
        return response()->json(['message' => $message]);
    }

    public function show(int $id): JsonResponse
    {
        $ordonnancement = Ordonnancement::with('personne', 'emplacement', 'paiements.facture')->findOrFail($id);
        return response()->json(['ordonnancement' => $ordonnancement]);
    }
}
